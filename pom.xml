<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.hiwepy</groupId>
	<artifactId>itextpdf-template</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>Building doc documents based on xhtml templates using itextpdf</description>
	<url>https://github.com/hiwepy/${project.artifactId}</url>
	<packaging>pom</packaging>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https:github.com/hiwepy/${project.artifactId}.git</connection>
		<developerConnection>scm:git:https:github.com/hiwepy/${project.artifactId}.git</developerConnection>
		<url>https:github.com/hiwepy/${project.artifactId}</url>
		<tag>${project.artifactId}</tag>
	</scm>

	<developers>
		<developer>
			<name>hiwepy</name>
			<email>hnxyhcwdl1003@163.com</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>+8</timezone>
		</developer>
	</developers>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Maven Snapshots Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
		    <id>ossrh</id>
			<name>Maven Central Staging Repository</name>
		    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		  </repository>
	</distributionManagement>

	<modules>
		<!--<module>itextpdf-template-beetl</module>
		<module>itextpdf-template-bom</module>
		<module>itextpdf-template-core</module>
		<module>itextpdf-template-freemarker</module>
		<module>itextpdf-template-jetbrick</module>
		<module>itextpdf-template-jsp</module>
		<module>itextpdf-template-rythm</module>
		<module>itextpdf-template-thymeleaf</module>
		<module>itextpdf-template-velocity</module>-->
		<module>itextpdf-template-xhtml</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<maxmem>512M</maxmem>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<phase>validate</phase>
							<configuration>
								<rules>
									<requireMavenVersion>
										<message>
											<![CDATA[You are running an older version of Maven. This application requires at least Maven ${maven.version}.]]>
										</message>
										<version>[${maven.version}.0,)</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<message>
											<![CDATA[You are running an older version of Java. This application requires at least JDK ${java.version}.]]>
										</message>
										<version>[${java.version}.0,)</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-gpg-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<tagNameFormat>v@{project.version}</tagNameFormat>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<useReleaseProfile>false</useReleaseProfile>
						<releaseProfiles>release</releaseProfiles>
						<goals>deploy</goals>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<attach>true</attach>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- 跳过单元测试 -->
						<skip>true</skip>
						<skipTests>true</skipTests>
						<!-- forkMode 可设置值有 “never”， “once”， “always” 和 “pertest”。 pretest：
							每一个测试创建一个新进程，为每个测试创建新的JVM是单独测试的最彻底方式，但也是最慢的，不适合hudson上持续回归。 once：在一个进程中进行所有测试。once为默认设置，在Hudson上持续回归时建议使用默认设置。
							always：在一个进程中并行的运行脚本，Junit4.7以上版本才可以使用，surefire的版本要在2.6以上提供这个功能，其中 threadCount：执行时，指定可分配的线程数量。只和参数parallel配合使用有效。默认：5。 -->
						<!--<forkMode>once</forkMode>-->
						<argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m -Dfile.encoding=UTF-8</argLine>
						<additionalClasspathElements>
							<additionalClasspathElement>${basedir}/target/test-classes</additionalClasspathElement>
						</additionalClasspathElements>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/TestBean.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<skipIfEmpty>true</skipIfEmpty>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<charset>${project.build.sourceEncoding}</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>${project.build.sourceEncoding}</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${maven-nexus-staging-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>false</autoReleaseAfterClose>
						<!-- <sslAllowAll>true</sslAllowAll> -->
						<stagingProgressPauseDurationSeconds>60</stagingProgressPauseDurationSeconds>
						<stagingProgressTimeoutMinutes>20</stagingProgressTimeoutMinutes>
						<detectBuildFailures>true</detectBuildFailures>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!--环境监察插件：代码编译前的环境监察 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<!-- 编译插件：编译主代码至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 资源插件：复制主资源文件至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- 单元测试插件 ：执行测试用例 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- jar包生成插件 ：创建项目jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- 源码插件:发布时自动将源码同时发布 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!-- 安装插件：将项目输出构件安装到本地仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>disable-javadoc-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none -Xlint:unchecked</additionalparam>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!--环境监察插件：代码编译前的环境监察 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
					</plugin>
					<!-- 编译插件：编译主代码至主输出目录 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>
					<!-- 资源插件：复制主资源文件至主输出目录 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<!-- 单元测试插件 ：执行测试用例 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>
					<!-- jar包生成插件 ：创建项目jar包 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
					</plugin>
					<!-- 源码插件:发布时自动将源码同时发布 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<!-- javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
					<!-- 安装插件：将项目输出构件安装到本地仓库 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
					</plugin>
					<!-- 签名插件：对构建的jar、javadoc、source使用gpg来签名 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
					<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
					</plugin>
					<!-- 版本自动升级插件 ：重置版本号 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<!-- Maven Plugin versions -->
		<maven.version>3.9.9</maven.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.8.0</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
		<maven-gpg-plugin.version>3.2.6</maven-gpg-plugin.version>
		<maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
		<maven-help-plugin.version>3.5.0</maven-help-plugin.version>
		<maven-install-plugin.version>3.1.3</maven-install-plugin.version>
		<maven-invoker-plugin.version>3.8.0</maven-invoker-plugin.version>
		<maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.8.0</maven-javadoc-plugin.version>
		<maven-nexus-staging-plugin.version>1.7.0</maven-nexus-staging-plugin.version>
		<maven-release-plugin.version>3.1.1</maven-release-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
		<maven-source-plugin.version>3.3.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.4.0</maven-war-plugin.version>
		<!-- Dependency versions -->
		<antlr4.version>4.13.2</antlr4.version>
		<beetl.version>3.19.0.RELEASE</beetl.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<commons-lang3.version>3.17.0</commons-lang3.version>
		<commons-logging.version>1.3.4</commons-logging.version>
		<commons-io.version>2.17.0</commons-io.version>
		<itext.version>9.0.0</itext.version>
		<itext-pdfxfa.version>5.0.0</itext-pdfxfa.version>
		<itext-licensekey.version>3.1.6</itext-licensekey.version>
		<itext-typography.version>5.0.0</itext-typography.version>
		<itext-xfa.version>3.0.4</itext-xfa.version>
		<itext-cleanup.version>2.0.5</itext-cleanup.version>
		<itext-html2pdf.version>2.1.7</itext-html2pdf.version>
		<itext-pdftest.version>7.1.16</itext-pdftest.version>
		<itext-xmlworker.version>5.5.13.4</itext-xmlworker.version>
		<itext-xmlworker-xfa.version>3.0.4</itext-xmlworker-xfa.version>
		<freemarker.version>2.3.34</freemarker.version>
		<jackson.version>2.18.2</jackson.version>
		<javax-activation.version>1.1.1</javax-activation.version>
		<javax.mail-api.version>1.6.2</javax.mail-api.version>
		<jetbrick.version>2.1.10</jetbrick.version>
		<jsoup.version>1.18.3</jsoup.version>
		<junit.version>4.12</junit.version>
		<pdfbox.version>3.0.3</pdfbox.version>
		<persistence.version>2.7.6</persistence.version>
		<rythm.version>1.4.2</rythm.version>
		<servlet-api.version>3.0.1</servlet-api.version>
		<slf4j.version>1.7.26</slf4j.version>
		<transmittable-thread-local.version>2.14.5</transmittable-thread-local.version>
		<thymeleaf.version>3.1.3.RELEASE</thymeleaf.version>
		<thumbnailator.version>0.4.20</thumbnailator.version>
		<velocity.version>2.4.1</velocity.version>
		<velocity-tools.version>2.0</velocity-tools.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- ######################测试工具包###################### -->

			<!--junit : Junit测试是程序员测试，即白盒测试 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>

			<!-- servlet 基础依赖包 -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet-api.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- ######################基础常用工具包###################### -->

			<!-- 常用功能包括类型转换和动态bean的创建 -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<!-- Commons项目中用来处理Java基本对象方法的工具类包， 可以简化很多平时经常要用到的写法， 例如判断字符串是否为空等等 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<!-- Commons项目中用来处理IO的一些工具类包 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
			<!-- Jsoup is a Java library for working with real-world HTML. It provides
				a very convenient API for extracting and manipulating data, using the best
				of DOM, CSS, and jquery-like methods. jsoup implements the WHATWG HTML5 specification,
				and parses HTML to the same DOM as modern browsers do. -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>

			<!-- ###################### itextpdf ###################### -->

			<!-- https://mvnrepository.com/artifact/com.itextpdf/kernel -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>kernel</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/barcodes -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>barcodes</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/layout -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>layout</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/forms -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>forms</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/pdfa -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>pdfa</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/io -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>io</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/html2pdf -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>html2pdf</artifactId>
			    <version>${itext-html2pdf.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/itext-licensekey -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>itext-licensekey</artifactId>
			    <version>${itext-licensekey.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/itext-licensekey-volume -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>itext-licensekey-volume</artifactId>
			    <version>${itext-licensekey.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/sign -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>sign</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/styled-xml-parser -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>styled-xml-parser</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/svg -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>svg</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/itext-rups -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>itext-rups</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/typography -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>typography</artifactId>
			    <version>${itext-typography.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/cleanup -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>cleanup</artifactId>
			    <version>${itext-cleanup.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/xfa-itext-pdfa -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>xfa-itext-pdfa</artifactId>
			    <version>${itext-xfa.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/pdfxfa -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>pdfxfa</artifactId>
			    <version>${itext-pdfxfa.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/hyph -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>hyph</artifactId>
			    <version>${itext.version}</version>
			    <scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/font-asian -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>font-asian</artifactId>
			    <version>${itext.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf/pdftest -->
			<dependency>
			    <groupId>com.itextpdf</groupId>
			    <artifactId>pdftest</artifactId>
			    <version>${itext-pdftest.version}</version>
			    <scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf.tool/xmlworker -->
			<dependency>
			    <groupId>com.itextpdf.tool</groupId>
			    <artifactId>xmlworker</artifactId>
			    <version>${itext-xmlworker.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.itextpdf.tool/xfa-xmlworker -->
			<dependency>
			    <groupId>com.itextpdf.tool</groupId>
			    <artifactId>xfa-xmlworker</artifactId>
				<version>${itext-xmlworker-xfa.version}</version>
			</dependency>

			<!-- For Beetl -->
			<!-- https://mvnrepository.com/artifact/com.ibeetl/beetl -->
			<dependency>
				<groupId>com.ibeetl</groupId>
				<artifactId>beetl</artifactId>
				<version>${beetl.version}</version>
			</dependency>
			<!-- For FreeMarker -->
			<!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<!-- For Jetbrick -->
			<!-- https://mvnrepository.com/artifact/com.github.subchen/jetbrick-template -->
			<dependency>
				<groupId>com.github.subchen</groupId>
				<artifactId>jetbrick-template</artifactId>
				<version>${jetbrick.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.antlr/antlr4-runtime -->
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-runtime</artifactId>
				<version>${antlr4.version}</version>
			</dependency>
			<!-- For Rythm -->
			<!-- https://mvnrepository.com/artifact/org.rythmengine/rythm-engine -->
			<dependency>
				<groupId>org.rythmengine</groupId>
				<artifactId>rythm-engine</artifactId>
				<version>${rythm.version}</version>
			</dependency>
			<!-- For Thymeleaf -->
			<!-- https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf -->
			<dependency>
				<groupId>org.thymeleaf</groupId>
				<artifactId>thymeleaf</artifactId>
				<version>${thymeleaf.version}</version>
			</dependency>
			<!-- For Velocity -->
			<!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity-engine-core -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-engine-core</artifactId>
				<version>${velocity.version}</version>
			</dependency>
		   <dependency>
		       <groupId>org.apache.velocity</groupId>
		       <artifactId>velocity-engine-scripting</artifactId>
		       <version>${velocity.version}</version>
		   </dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
